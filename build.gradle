plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.sonarqube" version "4.2.1.3168"
    id 'jacoco'
}

group = 'org.xtrackmedia'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sonar {
    properties {
        property "sonar.projectKey", "xTrack"
        property "sonar.projectName", "xTrack"
        property("sonar.host.url", "http://localhost:9000")
        property "sonar.qualitygate.wait", false
        property "sonar.coverage.exclusions", "src/main/java/org/xtrackmedia/xTrack/configuration/**," +
                "src/main/java/org/xtrackmedia/xTrack/album/AlbumController.java," +
                "src/main/java/org/xtrackmedia/xTrack/album/AlbumRepository.java," +
                "src/main/java/org/xtrackmedia/xTrack/playlist/PlaylistController.java" +
                "src/main/java/org/xtrackmedia/xTrack/playlist/PlaylistRepository.java" +
                "src/main/java/org/xtrackmedia/xTrack/song/SongController.java" +
                "src/main/java/org/xtrackmedia/xTrack/song/SongRepository.java" +
                "src/main/java/org/xtrackmedia/xTrack/user/UserController.java" +
                "src/main/java/org/xtrackmedia/xTrack/user/UserRepository.java"
    }
}

dependencies {
    //Implementations

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    testImplementation 'org.projectlombok:lombok:1.18.28'
    testImplementation 'org.apache.httpcomponents.client5:httpclient5'


    //implementation 'org.flywaydb:flyway-core'
    implementation 'org.modelmapper:modelmapper:2.4.4'
    //implementation 'com.sun.jersey:jersey-json:1.17'


    //Compile only
    compileOnly 'org.projectlombok:lombok'


    //Annotation processor
    annotationProcessor 'org.projectlombok:lombok'

    //Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
    testImplementation 'org.springframework.security:spring-security-test:6.0.2'

    //Database
    runtimeOnly 'org.postgresql:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/configuration/*"
            ])
        }))
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"
}

bootJar {
    exclude 'BOOT-INF/lib/jaxb-core-4.0.3.jar'
}


